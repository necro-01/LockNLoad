package GUI;

import javax.swing.*;
import java.awt.event.ActionEvent;

public class MainWindow extends javax.swing.JFrame {

    /**
     * Creates new form MainWindow
     */
    public MainWindow() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        home1 = new GUI.Home();
        jMenuBar1 = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        homeMenuItem = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        encodeMenuItem = new javax.swing.JMenuItem();
        decodeMenuItem = new javax.swing.JMenuItem();
        encryptMenuItem = new javax.swing.JMenuItem();
        decryptMenuItem = new javax.swing.JMenuItem();
        keyGeneratorMenuItem = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        exitMenuItem = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        userManualMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(500, 200));
        setPreferredSize(new java.awt.Dimension(800, 450));
        setResizable(false);
        setSize(new java.awt.Dimension(800, 450));

        fileMenu.setText("File");

        homeMenuItem.setText("Home");
        homeMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(homeMenuItem);
        fileMenu.add(jSeparator2);

        encodeMenuItem.setText("Encode");
        encodeMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                encodeMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(encodeMenuItem);

        decodeMenuItem.setText("Decode");
        decodeMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decodeMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(decodeMenuItem);

        encryptMenuItem.setText("Encrypt");
        encryptMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                encryptMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(encryptMenuItem);

        decryptMenuItem.setText("Decrypt");
        decryptMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decryptMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(decryptMenuItem);

        keyGeneratorMenuItem.setText("Key Generator");
        keyGeneratorMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                keyGeneratorMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(keyGeneratorMenuItem);
        fileMenu.add(jSeparator1);

        exitMenuItem.setText("Exit");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(exitMenuItem);

        jMenuBar1.add(fileMenu);

        helpMenu.setText("Help");

        userManualMenuItem.setText("User Manual");
        userManualMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userManualMenuItemActionPerformed(evt);
            }
        });
        helpMenu.add(userManualMenuItem);

        jMenuBar1.add(helpMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(home1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(home1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void encryptMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_encryptMenuItemActionPerformed
        openEncryptPage();
    }//GEN-LAST:event_encryptMenuItemActionPerformed

    private void decryptMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decryptMenuItemActionPerformed
        openDecryptPage();
    }//GEN-LAST:event_decryptMenuItemActionPerformed

    private void keyGeneratorMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_keyGeneratorMenuItemActionPerformed
        openKeyGeneratorPage();
    }//GEN-LAST:event_keyGeneratorMenuItemActionPerformed

    private void userManualMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userManualMenuItemActionPerformed
        UserManual userManual = new UserManual();
        userManual.setVisible(true);
        userManual.setLocation(510, 210);
        
    }//GEN-LAST:event_userManualMenuItemActionPerformed

    private void encodeMenuItemActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_encodeMenuItemActionPerformed
        openEncodePage();

    }// GEN-LAST:event_encodeMenuItemActionPerformed

    private void homeMenuItemActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_homeMenuItemActionPerformed
        openHomePage();

    }// GEN-LAST:event_homeMenuItemActionPerformed

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_exitMenuItemActionPerformed
        exitApplication();

    }// GEN-LAST:event_exitMenuItemActionPerformed

    private void decodeMenuItemActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_decodeMenuItemActionPerformed
        openDecodePage();
    }// GEN-LAST:event_decodeMenuItemActionPerformed

    private void openHomePage() {
        setContentPane(home1);
        home1.setActionListenerEncodeButton((ActionEvent ae) -> {
            openEncodePage();
        });
        home1.setActionListenerDecodeButton((ActionEvent ae) -> {
            openDecodePage();
        });
        home1.setActionListenerEncryptButton((ActionEvent ae) -> {
            openEncryptPage();
        });
        home1.setActionListenerDecryptButton((ActionEvent ae) -> {
            openDecryptPage();
        });
        home1.setActionListenerKeyGeneratorButton((ActionEvent ae) -> {
            openKeyGeneratorPage();
        });
        home1.setActionListenerExitButton((ActionEvent ae) -> {
            exitApplication();
        });
    }

    private void openEncodePage() {
        Encode encodePanel = new GUI.Encode();
        encodePanel.setActionListenerBackButton((ActionEvent ae) -> {
            openHomePage();
        });
        setContentPane(encodePanel);
    }

    private void openDecodePage() {
        Decode decodePanel = new GUI.Decode();
        decodePanel.setActionListenerBackButton((ActionEvent ae) -> {
            openHomePage();
        });
        setContentPane(decodePanel);
    }

    private void openEncryptPage() {
        Encrypt encryptPanel = new GUI.Encrypt();
        encryptPanel.setActionListenerBackButton((ActionEvent ae) -> {
            openHomePage();
        });
        setContentPane(encryptPanel);
    }

    private void openDecryptPage() {
        Decrypt decryptPanel = new GUI.Decrypt();
        decryptPanel.setActionListenerBackButton((ActionEvent ae) -> {
            openHomePage();
        });
        setContentPane(decryptPanel);
    }

    private void openKeyGeneratorPage() {
        KeyGenerator keyGeneratorPanel = new GUI.KeyGenerator();
        keyGeneratorPanel.setActionListenerBackButton((ActionEvent ae) -> {
            openHomePage();
        });
        setContentPane(keyGeneratorPanel);

    }

    private void exitApplication() {
        System.out.println("Exit LockNLoad");
        System.exit(0);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        // <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
        // (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the default
         * look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException |
                 UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        }
        // </editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                MainWindow mainWindow = new MainWindow();
                mainWindow.openHomePage();
                mainWindow.setVisible(true);
                mainWindow.setLocation(500, 200);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem decodeMenuItem;
    private javax.swing.JMenuItem decryptMenuItem;
    private javax.swing.JMenuItem encodeMenuItem;
    private javax.swing.JMenuItem encryptMenuItem;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenu helpMenu;
    private GUI.Home home1;
    private javax.swing.JMenuItem homeMenuItem;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JMenuItem keyGeneratorMenuItem;
    private javax.swing.JMenuItem userManualMenuItem;
    // End of variables declaration//GEN-END:variables
}
